@Model WebAppEcartDemo.ViewModel.ItemViewModel
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<script type="text/javascript">
const { error } = require("jquery");

    $(document).ready(function () {
        $("#btnsave").click(function(){
            SaveItem()
        });


    });
    function ResetItem() {
        $("#CategoryId").val("1");
        $("#ItemCode").val("");
        $("#ItemName").val("");
        $("#Description").val("");
        $("#ImagePathe").val("");
        $("#ItemPrice").val("");


    }
    function SaveItem() {
        var formdata = new FormData();
        formdata.append("CategoryId", $("#CategoryId").val());
        formdata.append("ItemCode", $("#ItemCode").val());
        formdata.append("ItemName", $("#ItemName").val());
        formdata.append("Description", $("#Description").val());
        formdata.append("ImagePathe", $("#ImagePathe").val());
        formdata.append("ItemPrice", $("#ItemPrice").get(0).files[0]);

        $.ajax({
            async: true,
            dataType: 'JSON',
            type: 'POST',
            contentType: false,
            processorData: false,
            url: '/Item/Index',
            data: formdata,
            success: function (data) {
                if (data.success) {


                    alert(data.Message);
                    ResetItem();
                }

            };
            error: function () {
                alert("There is some problem to add item");
            }


        });


    }

</script>

<div class="container">
    <div class="col-lg-4">
        <div class="form-group">
            Category:
            @Html.DropDownListFor(expression:model => model.categoryId, new SelectList(Model.CategorySelectListItem, dataValueField:"Value",dataTextField:"Text"),
            htmlAttributes: new {@class = "form-control"})

        </div>

    </div>

    <div class="col-lg-4">
        <div class="form-group">
            Item Code:
            @Html.TextAreaFor(expression: model => model.ItemCode, htmlAttributes: new { @class = "form-control" , autocomplete = "off"})

        </div>

    </div>

    <div class="col-lg-4">
        <div class="form-group">
            Item Name:
            @Html.TextAreaFor(expression: model => model.ItemName, htmlAttributes: new { @class = "form-control", autocomplete = "off" })

        </div>

    </div>

    <div class="col-lg-4">
        <div class="form-group">
            Description:
            @Html.TextAreaFor(expression: model => model.Description, htmlAttributes: new { @class = "form-control", autocomplete = "off" })

        </div>

    </div>

    <div class="col-lg-4">
        <div class="form-group">
            Item Price:
            @Html.TextAreaFor(expression: model => model.itemPrice, htmlAttributes: new { @class = "form-control", autocomplete = "off" })

        </div>

    </div>

    <div class="col-lg-4">
        <div class="form-group">
            Image Path:
            @Html.TextAreaFor(expression: model => model.ImagePath, htmlAttributes: new {Type = "file", @class = "form-control" })

        </div>

    </div>

    <div>
        <Input button="button" value="Save" name="Save" class="btn btn-primary" id="btnsave" />
        &nbsp;
        <Input button="button" value="Reset" name="Reset" class="btn btn-danger" />


    </div>


</div>